{"version":3,"sources":["Navbar.js","Bloglist.js","useFetch.js","Home.js","Create.js","BlogDetails.js","Bio.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","Bloglist","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","Bio","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c22148f2.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (<nav className=\"navbar\">\n        <h1>The Walter Blog</h1>\n        <div className=\"links\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/bio\">Bio</Link>\n            <Link to=\"/create\">New Post</Link>\n        </div>\n    </nav>)\n    ;\n}\n \nexport default Navbar;\n\n","import { Link } from \"react-router-dom\";\n\nconst Bloglist = ({ blogs, title }) => {\n    return (\n        <div className=\"blog-list\">\n        <h2>{title}</h2>\n              { blogs.map((blog) => (\n          <div className=\"blog-preview\" key={ blog.id }>\n              <Link to={`/blogs/${blog.id}`}>\n              <h2>{ blog.title } </h2>\n              <p>Written by { blog.author } </p>\n              </Link>\n          </div> \n       ))}\n        </div>\n    );\n}\n \nexport default Bloglist;","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError]= useState(null);\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n        setTimeout(() => {\n            fetch(url, {signal : abortCont.signal }).then(res => {\n                if(!res.ok) {\n                    throw Error('Werps, could not fetch data for that. Sorry mate')\n                }\n                return res.json();\n            }).then(data => {\n                setData(data);\n                setIsPending(false);\n                setError(null);\n            }).catch(err => {\n                if (err.name === 'AbortError'){\n                    console.log('fetch aborted'); \n                } else {\n                    setIsPending(false);\n                    setError(err.message);\n                }\n            }) \n        }, 1000);\n        return () => abortCont.abort();\n    }, [url]);\n    return {data, isPending, error}\n}\n\nexport default useFetch;","import Bloglist from './Bloglist';\nimport useFetch from './useFetch';\n\n\nconst Home = () => {\n    const {data: blogs, isPending, error} = useFetch('https://my-json-server.typicode.com/BergFulton/walter-json/blogs');\n\n    return (<div className=\"home\">\n        {error && <div>Werps, something went super bad. Try again later?</div>}\n        {isPending && <div>Getting cute Walter content...</div>}\n        {blogs && <Bloglist blogs={blogs} title=\"All Blogs About Walter\"/>}\n    </div>  );\n}\n \nexport default Home;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('The Girl');\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = { title, body, author };\n    setIsPending(true);\n    fetch('https://my-json-server.typicode.com/BergFulton/walter-json/blogs', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      setIsPending(false);\n      history.push('/');\n    })\n  }\n\n   \n\n    return (\n      <div className=\"create\">\n        <h2 className=\"create\">Add a new blog about Walter</h2>\n        <form onSubmit = {handleSubmit}>\n          <label>Blog Title</label>\n          <input type=\"text\" required value = { title } onChange = {(e) => setTitle(e.target.value)}/>\n          <label>Blog Body</label>\n          <textarea required value = { body } onChange = {(e) => setBody(e.target.value)}/>\n          <label>Author</label>\n          <select required value = { author } onChange = {(e) => setAuthor(e.target.value)}>\n            <option value=\"The Girl\">The Girl</option>\n            <option value=\"The Boy\">The Boy</option>\n            <option value=\"Walter\">The Dog</option>\n          </select>\n          { !isPending && <button>Add Blog</button> }\n          { isPending && <button disabled>Adding Your Blog...sit and stay</button> }\n        </form>\n      </div>\n      );\n}\n \nexport default Create\n","import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const { data: blog, error, isPending } = useFetch('https://my-json-server.typicode.com/BergFulton/walter-json/blogs' + id);\n  const history = useHistory();\n  const handleClick= () => {\n    fetch('https://my-json-server.typicode.com/BergFulton/walter-json/blogs' + blog.id, {\n      method: 'DELETE'\n    }).then(() => {\n      history.push('/')\n    })\n  }\n  return (\n    <div className=\"blog-details\">\n      { isPending && <div>Loading...</div> }\n      { error && <div>{ error }</div> }\n      { blog && (\n        <article>\n          <h2>{ blog.title }</h2>\n          <p>Written by { blog.author }</p>\n          <div>{ blog.body }</div>\n          <button onClick={handleClick}>Delete this Dog Blog</button>\n        </article>\n      )}\n    </div>\n  );\n}\n \nexport default BlogDetails;","const Bio = () => {\n    return (\n    <div><p>This is a blog about Walter, a Giant Schnabrador. He's a very good boy who lives with Tracey and Patrick in Pittsburgh, PA.</p>\n    <p>He was rescued from the Gurnsey County Dog Warden by the Western PA Humane Society, and was adopted before he could even make it to the website.</p>\n    <p>Walter is deeply loved by many people, and has a neighborhood fan club.</p>\n    <ul>\n        <li>Cheese</li>\n        <li>Car rides</li>\n        <li>Naps</li>\n        <li>Popcorn</li>\n    </ul>\n    <strong>Does Not Like</strong>\n    <ul>\n        <li>Having his feets touched</li>\n        <li></li>\n    </ul> \n    </div>\n    );\n}\n \nexport default Bio;","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n    return ( \n        <div className=\"not-found\">\n            <h2>Sorry, you're barking up the wrong tree</h2>\n            <p>We can't find what you're looking for</p>\n            <Link to=\"/\">Back to the homepage</Link>\n        </div>\n     );\n}\n \nexport default NotFound;","import Navbar from './Navbar'\nimport Home from './Home'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Create from './Create'\nimport Bloglist from './Bloglist';\nimport BlogDetails from './BlogDetails';\nimport Bio from './Bio';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/create\">\n                <Create/>\n              </Route>\n              <Route path=\"/blogs/:id\">\n                <BlogDetails/>\n              </Route>\n              <Route path=\"/bio\">\n                <Bio/>\n              </Route>\n              <Route path=\"*\">\n                <NotFound/>\n              </Route>\n            </Switch>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}